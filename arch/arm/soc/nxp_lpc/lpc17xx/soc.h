/*
 * Copyright (c) 2017, NXP
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @file
 * @brief Board configuration macros for the nxp_lpc54114 platform
 *
 * This header file is used to specify and describe board-level aspects for the
 * 'nxp_lpc17xx' platform.
 */

#ifndef _SOC__H_
#define _SOC__H_

#ifdef __cplusplus
extern "C" {
#endif

#ifndef _ASMLANGUAGE
#include <device.h>
#include <misc/util.h>

enum sysconfig_reg {

	CLKSRCSEL = 0x400FC10C,

	PLL0CON = 0x400FC080,
	PLL0CFG = 0x400FC084,
	PLL0STAT = 0x400FC088,
	PLL0FEED = 0x400FC08C,

	PLL1CON = 0x400FC0A0,
	PLL1CFG = 0x400FC0A4,
	PLL1STAT = 0x400FC0A8,
	PLL1FEED = 0x400FC0AC,

	CCLKCFG = 0x400FC104,
	USBCLKCFG = 0x400FC108,
	PCLKSEL0 = 0x400FC1A8,
	PCLKSEL1 = 0x400FC1AC,
	PCON = 0x400FC0C0,
	PCONP = 0x400FC0C4,

	CLKOUTCFG = 0x400FC1C8,

	SCS = 0x400FC1A0,
	FLASHCFG = 0x400FC000

};

enum scs_config {
	OSCRANGE = 4,
	OSCEN = 5,
	OSCSTAT = 6
};

/* This enums used for enable clock to peripheral, and
 * here we use PCLKSEL1_PCLK_FIRST enum to make each enum
 * value as unique.
 */
enum pclksel_config {
	PCLKSEL1_PCLK_FIRST             = 100,
	PCLKSEL_PCLK_MASK		= 3,

	PCLKSEL0_PCLK_WDT_DIV1		= 0,
	PCLKSEL0_PCLK_TIMER0_DIV1	= 2,
	PCLKSEL0_PCLK_TIMER1_DIV1	= 4,
	PCLKSEL0_PCLK_UART0_DIV1	= 6,
	PCLKSEL0_PCLK_UART1_DIV1	= 8,
	PCLKSEL0_PCLK_PWM1_DIV1		= 12,
	PCLKSEL0_PCLK_I2C0_DIV1		= 14,
	PCLKSEL0_PCLK_SPI_DIV1		= 16,

	PCLKSEL0_PCLK_SSP1_DIV1		= 20,
	PCLKSEL0_PCLK_DAC_DIV1		= 22,
	PCLKSEL0_PCLK_ADC_DIV1		= 24,
	PCLKSEL0_PCLK_CAN1_DIV1		= 26,
	PCLKSEL0_PCLK_CAN2_DIV1		= 28,
	PCLKSEL0_PCLK_ACF_DIV1		= 30,

	PCLKSEL1_PCLK_QEI_DIV1		= 0 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_GPIOINT_DIV1	= 2 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_PCB_DIV1		= 4 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_I2C1_DIV1		= 6 + PCLKSEL1_PCLK_FIRST,

	PCLKSEL1_PCLK_SSP0_DIV1		= 10 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_TIMER2_DIV1	= 12 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_TIMER3_DIV1	= 14 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_UART2_DIV1	= 16 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_UART3_DIV1	= 18 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_I2C2_DIV1		= 20 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_I2S_DIV1		= 22 + PCLKSEL1_PCLK_FIRST,

	PCLKSEL1_PCLK_RIT_DIV1		= 26 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_SYSCON_DIV1	= 28 + PCLKSEL1_PCLK_FIRST,
	PCLKSEL1_PCLK_MC_DIV1		= 30 + PCLKSEL1_PCLK_FIRST
};

enum pclksel_bit_value {
	PCLKSEL_CCLK_DIV_BY_1		= 1,
	PCLKSEL_CCLK_DIV_BY_2		= 2,
	PCLKSEL_CCLK_DIV_BY_4		= 0,
	PCLKSEL_CCLK_DIV_BY_8		= 3
};

enum pconp_config {
	PCONP_PCTIM0	= 1,
	PCONP_PCTIM1	= 2,
	PCONP_PCUART0	= 3,
	PCONP_PCUART1	= 4,

	PCONP_PCPWM1	= 6,
	PCONP_PCI2C0	= 7,
	PCONP_PCSPI	= 8,
	PCONP_PCRTC	= 9,
	PCONP_PCSSP1	= 10,

	PCONP_PCADC	= 12,
	PCONP_PCCAN1	= 13,
	PCONP_PCCAN2	= 14,
	PCONP_PCGPIO	= 15,
	PCONP_PCRIT	= 16,
	PCONP_PCMCPWM	= 17,
	PCONP_PCQEI	= 18,
	PCONP_PCI2C1	= 19,

	PCONP_PCSSP0	= 21,
	PCONP_PCTIM2	= 22,
	PCONP_PCTIM3	= 23,
	PCONP_PCUART2	= 24,
	PCONP_PCUART3	= 25,
	PCONP_PCI2C2	= 26,
	PCONP_PCI2S	= 27,

	PCONP_PCGPDMA	= 29,
	PCONP_PCENET	= 30,
	PCONP_PCUSB	= 31,

	PCONP_MASK	= 1
};

enum flashcfg_config {
	FLASHTIM = 12,
	RESERVED_value = 0x3A
};

enum pll0cfg_config {
	PLL0CFG_MSEL0_0_bit = 0,
	PLL0CFG_NSEL0 = 16,
	PLL0CFG_MSEL0 = (1 << PLL0CFG_MSEL0_0_bit)
};


enum pllofeed_config {

	PLL0FEED_FIRST	= 0xAA,
	PLL0FEED_SECOND	= 0x55
};

enum cclkcfg_config {
	CCLKSEL_bit = 0
};

enum pll0con_config {
	PLLE0 = 0,
	PLLC0 = 1
};

enum clksrcsel_config {
	CLKSRC = 0x01
};

#endif /* !_ASMLANGUAGE */

#ifdef __cplusplus
}
#endif

#endif /* _SOC__H_ */
